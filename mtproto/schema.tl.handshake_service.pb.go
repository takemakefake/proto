//
// WARNING! All changes made in this file will be lost!
// Created from 'scheme.tl' by 'codegen_proto.py'
//
//  Copyright (c) 2017, https://github.com/xxxxx
//  All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: schema.tl.handshake_service.proto

package mtproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// /////////////////////////////////////////////////////////////////////////////
// req_pq#60469778 nonce:int128 = ResPQ;
type TLReqPq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         []byte                 `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLReqPq) Reset() {
	*x = TLReqPq{}
	mi := &file_schema_tl_handshake_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLReqPq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLReqPq) ProtoMessage() {}

func (x *TLReqPq) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLReqPq.ProtoReflect.Descriptor instead.
func (*TLReqPq) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_service_proto_rawDescGZIP(), []int{0}
}

func (x *TLReqPq) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

// /////////////////////////////////////////////////////////////////////////////
// req_DH_params#d712e4be nonce:int128 server_nonce:int128 p:string q:string public_key_fingerprint:long encrypted_data:string = Server_DH_Params;
type TLReq_DHParams struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Nonce                []byte                 `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce          []byte                 `protobuf:"bytes,2,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	P                    string                 `protobuf:"bytes,3,opt,name=p,proto3" json:"p,omitempty"`
	Q                    string                 `protobuf:"bytes,4,opt,name=q,proto3" json:"q,omitempty"`
	PublicKeyFingerprint int64                  `protobuf:"varint,5,opt,name=public_key_fingerprint,json=publicKeyFingerprint,proto3" json:"public_key_fingerprint,omitempty"`
	EncryptedData        string                 `protobuf:"bytes,6,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *TLReq_DHParams) Reset() {
	*x = TLReq_DHParams{}
	mi := &file_schema_tl_handshake_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLReq_DHParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLReq_DHParams) ProtoMessage() {}

func (x *TLReq_DHParams) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLReq_DHParams.ProtoReflect.Descriptor instead.
func (*TLReq_DHParams) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_service_proto_rawDescGZIP(), []int{1}
}

func (x *TLReq_DHParams) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *TLReq_DHParams) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *TLReq_DHParams) GetP() string {
	if x != nil {
		return x.P
	}
	return ""
}

func (x *TLReq_DHParams) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *TLReq_DHParams) GetPublicKeyFingerprint() int64 {
	if x != nil {
		return x.PublicKeyFingerprint
	}
	return 0
}

func (x *TLReq_DHParams) GetEncryptedData() string {
	if x != nil {
		return x.EncryptedData
	}
	return ""
}

// /////////////////////////////////////////////////////////////////////////////
// set_client_DH_params#f5045f1f nonce:int128 server_nonce:int128 encrypted_data:string = Set_client_DH_params_answer;
type TLSetClient_DHParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonce         []byte                 `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	ServerNonce   []byte                 `protobuf:"bytes,2,opt,name=server_nonce,json=serverNonce,proto3" json:"server_nonce,omitempty"`
	EncryptedData string                 `protobuf:"bytes,3,opt,name=encrypted_data,json=encryptedData,proto3" json:"encrypted_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSetClient_DHParams) Reset() {
	*x = TLSetClient_DHParams{}
	mi := &file_schema_tl_handshake_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSetClient_DHParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSetClient_DHParams) ProtoMessage() {}

func (x *TLSetClient_DHParams) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSetClient_DHParams.ProtoReflect.Descriptor instead.
func (*TLSetClient_DHParams) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_service_proto_rawDescGZIP(), []int{2}
}

func (x *TLSetClient_DHParams) GetNonce() []byte {
	if x != nil {
		return x.Nonce
	}
	return nil
}

func (x *TLSetClient_DHParams) GetServerNonce() []byte {
	if x != nil {
		return x.ServerNonce
	}
	return nil
}

func (x *TLSetClient_DHParams) GetEncryptedData() string {
	if x != nil {
		return x.EncryptedData
	}
	return ""
}

// /////////////////////////////////////////////////////////////////////////////
// destroy_auth_key#d1435160 = DestroyAuthKeyRes;
type TLDestroyAuthKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLDestroyAuthKey) Reset() {
	*x = TLDestroyAuthKey{}
	mi := &file_schema_tl_handshake_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLDestroyAuthKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLDestroyAuthKey) ProtoMessage() {}

func (x *TLDestroyAuthKey) ProtoReflect() protoreflect.Message {
	mi := &file_schema_tl_handshake_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLDestroyAuthKey.ProtoReflect.Descriptor instead.
func (*TLDestroyAuthKey) Descriptor() ([]byte, []int) {
	return file_schema_tl_handshake_service_proto_rawDescGZIP(), []int{3}
}

var File_schema_tl_handshake_service_proto protoreflect.FileDescriptor

const file_schema_tl_handshake_service_proto_rawDesc = "" +
	"\n" +
	"!schema.tl.handshake_service.proto\x12\amtproto\x1a\x19schema.tl.handshake.proto\"!\n" +
	"\tTL_req_pq\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\fR\x05nonce\"\xc4\x01\n" +
	"\x10TL_req_DH_params\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\fR\x05nonce\x12!\n" +
	"\fserver_nonce\x18\x02 \x01(\fR\vserverNonce\x12\f\n" +
	"\x01p\x18\x03 \x01(\tR\x01p\x12\f\n" +
	"\x01q\x18\x04 \x01(\tR\x01q\x124\n" +
	"\x16public_key_fingerprint\x18\x05 \x01(\x03R\x14publicKeyFingerprint\x12%\n" +
	"\x0eencrypted_data\x18\x06 \x01(\tR\rencryptedData\"y\n" +
	"\x17TL_set_client_DH_params\x12\x14\n" +
	"\x05nonce\x18\x01 \x01(\fR\x05nonce\x12!\n" +
	"\fserver_nonce\x18\x02 \x01(\fR\vserverNonce\x12%\n" +
	"\x0eencrypted_data\x18\x03 \x01(\tR\rencryptedData\"\x15\n" +
	"\x13TL_destroy_auth_key2\xb7\x02\n" +
	"\n" +
	"RPCAuthKey\x12.\n" +
	"\x06req_pq\x12\x12.mtproto.TL_req_pq\x1a\x0e.mtproto.ResPQ\"\x00\x12G\n" +
	"\rreq_DH_params\x12\x19.mtproto.TL_req_DH_params\x1a\x19.mtproto.Server_DH_Params\"\x00\x12`\n" +
	"\x14set_client_DH_params\x12 .mtproto.TL_set_client_DH_params\x1a$.mtproto.Set_client_DH_params_answer\"\x00\x12N\n" +
	"\x10destroy_auth_key\x12\x1c.mtproto.TL_destroy_auth_key\x1a\x1a.mtproto.DestroyAuthKeyRes\"\x00B[\n" +
	"\x1fcom.takemakefake.engine.mtprotoB\aMTProtoH\x02Z-github.com/takemakefake/proto/mtproto;mtprotob\x06proto3"

var (
	file_schema_tl_handshake_service_proto_rawDescOnce sync.Once
	file_schema_tl_handshake_service_proto_rawDescData []byte
)

func file_schema_tl_handshake_service_proto_rawDescGZIP() []byte {
	file_schema_tl_handshake_service_proto_rawDescOnce.Do(func() {
		file_schema_tl_handshake_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_schema_tl_handshake_service_proto_rawDesc), len(file_schema_tl_handshake_service_proto_rawDesc)))
	})
	return file_schema_tl_handshake_service_proto_rawDescData
}

var file_schema_tl_handshake_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_schema_tl_handshake_service_proto_goTypes = []any{
	(*TLReqPq)(nil),                  // 0: mtproto.TL_req_pq
	(*TLReq_DHParams)(nil),           // 1: mtproto.TL_req_DH_params
	(*TLSetClient_DHParams)(nil),     // 2: mtproto.TL_set_client_DH_params
	(*TLDestroyAuthKey)(nil),         // 3: mtproto.TL_destroy_auth_key
	(*ResPQ)(nil),                    // 4: mtproto.ResPQ
	(*Server_DH_Params)(nil),         // 5: mtproto.Server_DH_Params
	(*SetClient_DHParamsAnswer)(nil), // 6: mtproto.Set_client_DH_params_answer
	(*DestroyAuthKeyRes)(nil),        // 7: mtproto.DestroyAuthKeyRes
}
var file_schema_tl_handshake_service_proto_depIdxs = []int32{
	0, // 0: mtproto.RPCAuthKey.req_pq:input_type -> mtproto.TL_req_pq
	1, // 1: mtproto.RPCAuthKey.req_DH_params:input_type -> mtproto.TL_req_DH_params
	2, // 2: mtproto.RPCAuthKey.set_client_DH_params:input_type -> mtproto.TL_set_client_DH_params
	3, // 3: mtproto.RPCAuthKey.destroy_auth_key:input_type -> mtproto.TL_destroy_auth_key
	4, // 4: mtproto.RPCAuthKey.req_pq:output_type -> mtproto.ResPQ
	5, // 5: mtproto.RPCAuthKey.req_DH_params:output_type -> mtproto.Server_DH_Params
	6, // 6: mtproto.RPCAuthKey.set_client_DH_params:output_type -> mtproto.Set_client_DH_params_answer
	7, // 7: mtproto.RPCAuthKey.destroy_auth_key:output_type -> mtproto.DestroyAuthKeyRes
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_schema_tl_handshake_service_proto_init() }
func file_schema_tl_handshake_service_proto_init() {
	if File_schema_tl_handshake_service_proto != nil {
		return
	}
	file_schema_tl_handshake_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_schema_tl_handshake_service_proto_rawDesc), len(file_schema_tl_handshake_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schema_tl_handshake_service_proto_goTypes,
		DependencyIndexes: file_schema_tl_handshake_service_proto_depIdxs,
		MessageInfos:      file_schema_tl_handshake_service_proto_msgTypes,
	}.Build()
	File_schema_tl_handshake_service_proto = out.File
	file_schema_tl_handshake_service_proto_goTypes = nil
	file_schema_tl_handshake_service_proto_depIdxs = nil
}
